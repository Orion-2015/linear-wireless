///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.3.10338/W32 for 8051        12/Aug/2012  16:32:57 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  near                                              /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data                                              /
//    Dptr setup         =  1,16                                              /
//    Source file        =  E:\linear-wireless\Components\Applications\logHan /
//                          dle.c                                             /
//    Command line       =  -f E:\linear-wireless\Projects\Examples\SRF04\Cas /
//                          cading_End_Devices\IAR\Configuration\End_Device\s /
//                          mpl_config.dat (-DNUM_CONNECTIONS=2               /
//                          -DSIZE_INFRAME_Q=5 -DSIZE_OUTFRAME_Q=1            /
//                          -DEND_DEVICE -DFWVERSION=2) -f                    /
//                          E:\linear-wireless\Projects\Examples\SRF04\Cascad /
//                          ing_End_Devices\IAR\Configuration\smpl_nwk_config /
//                          .dat (-DMAX_HOPS=3 -DMAX_HOPS_FROM_ME=3           /
//                          -DCOMMAND_SIZE=10 -DLOGTEMP_SIZE=100              /
//                          -DMAX_HOPS_FROM_AP=1 -DMAX_NWK_PAYLOAD=34         /
//                          -DMAX_APP_PAYLOAD=50 -DDEFAULT_LINK_TOKEN=0x01020 /
//                          304 -DDEFAULT_JOIN_TOKEN=0x05060708               /
//                          -DxFREQUENCY_AGILITY -DAPP_AUTO_ACK               /
//                          -DxEXTENDED_API -DxSMPL_SECURE                    /
//                          -DxNVOBJECT_SUPPORT -DxSW_TIMER                   /
//                          -DxFREQUENCY_HOPPING -DNWK_PLL_REFERENCE_CLOCK    /
//                          -DBSP_TIMER_USED=1 -DNWK_PLL_SHOW_LOCATION_INDICA /
//                          TORS -DUART_NUMBER=UART_NUMBER_0                  /
//                          -DUART_LOCATION=UART_LOCATION_1                   /
//                          -DUART_BAUD_RATE=19200 -DUART_FLOW_CONTROL=UART_F /
//                          LOW_CONTROL_OFF -DUART_PARITY_MODE=UART_PARITY_NO /
//                          NE -DUART_STOP_BITS=UART_1_STOP_BIT -DCOMDEBUG)   /
//                          -DLOGINFO E:\linear-wireless\Components\Applicati /
//                          ons\logHandle.c -D MCU_H=<ioCC1110.h> -D          /
//                          MRFI_CC1110 -lb E:\linear-wireless\Projects\Examp /
//                          les\SRF04\Cascading_End_Devices\IAR\CC1110-EndDev /
//                          ice\List\ -o E:\linear-wireless\Projects\Examples /
//                          \SRF04\Cascading_End_Devices\IAR\CC1110-EndDevice /
//                          \Obj\ -e --debug --core=plain --dptr=16,1         /
//                          --data_model=large --code_model=near              /
//                          --calling_convention=xdata_reentrant              /
//                          --place_constants=data --nr_virtual_regs 8 -I     /
//                          E:\linear-wireless\Projects\Examples\SRF04\Cascad /
//                          ing_End_Devices\IAR\..\..\..\..\..\Components\bsp /
//                          \ -I E:\linear-wireless\Projects\Examples\SRF04\C /
//                          ascading_End_Devices\IAR\..\..\..\..\..\Component /
//                          s\bsp\drivers\ -I E:\linear-wireless\Projects\Exa /
//                          mples\SRF04\Cascading_End_Devices\IAR\..\..\..\.. /
//                          \..\Components\bsp\boards\SRF04EB\ -I             /
//                          E:\linear-wireless\Projects\Examples\SRF04\Cascad /
//                          ing_End_Devices\IAR\..\..\..\..\..\Components\mrf /
//                          i\ -I E:\linear-wireless\Projects\Examples\SRF04\ /
//                          Cascading_End_Devices\IAR\..\..\..\..\..\Componen /
//                          ts\SimpliciTI\nwk\ -I E:\linear-wireless\Projects /
//                          \Examples\SRF04\Cascading_End_Devices\IAR\..\..\. /
//                          .\..\..\Components\SimpliciTI\nwk_applications\   /
//                          -I E:\linear-wireless\Projects\Examples\SRF04\Cas /
//                          cading_End_Devices\IAR\..\..\..\..\..\Components\ /
//                          ApplicationFramework\ -Ohz                        /
//    List file          =  E:\linear-wireless\Projects\Examples\SRF04\Cascad /
//                          ing_End_Devices\IAR\CC1110-EndDevice\List\logHand /
//                          le.s51                                            /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME logHandle

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?FUNC_ENTER_XDATA
        EXTERN ?FUNC_LEAVE_XDATA
        EXTERN ?PUSH_XSTACK8_X_TWO
        EXTERN ?V0

        PUBLIC getLogHandle

        EXTERN memcpy
        EXTERN log
        EXTERN strlen
        EXTERN logBuffer
        EXTERN logIndex
        EXTERN logTemp


        RSEG NEAR_CODE:CODE:NOROOT(0)
getLogHandle:
        CODE
        MOV     A,#-0x9
        LCALL   ?FUNC_ENTER_XDATA
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R4
        ADD     A,#0x7
        MOV     ?V0 + 0,A
        MOV     A,R5
        ADDC    A,#0x0
        MOV     ?V0 + 1,A
        MOV     A,R4
        ADD     A,#0x8
        MOV     R6,A
        MOV     A,R5
        ADDC    A,#0x0
        MOV     R7,A
        MOV     DPTR,#logIndex
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R0
        ORL     A,R1
        JZ      ??getLogHandle_0
        MOV     DPTR,#logIndex
        CLR     C
        MOVX    A,@DPTR
        SUBB    A,#0x29
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,#0x0
        JNC     ??getLogHandle_0
        ; Setup parameters for call to function memcpy
        MOV     DPTR,#logIndex
        LCALL   ?PUSH_XSTACK8_X_TWO
        MOV     R4,#logBuffer & 0xff
        MOV     R5,#(logBuffer >> 8) & 0xff
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   memcpy
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        MOV     DPTR,#logIndex
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     A,R0
        LCALL   ?Subroutine0
??CrossCallReturnLabel_0:
        MOV     A,#0xa
        SJMP    ??getLogHandle_1
??getLogHandle_0:
        MOV     DPTR,#logIndex
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R0
        ORL     A,R1
        JNZ     ??getLogHandle_2
        ; Setup parameters for call to function memcpy
        MOV     DPTR,#logIndex
        LCALL   ?PUSH_XSTACK8_X_TWO
        MOV     R4,#logBuffer & 0xff
        MOV     R5,#(logBuffer >> 8) & 0xff
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   memcpy
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        ; Setup parameters for call to function strlen
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   strlen
        MOV     A,R2
        LCALL   ?Subroutine0
??CrossCallReturnLabel_1:
        MOV     A,#0xb
??getLogHandle_1:
        MOVX    @DPTR,A
        ; Setup parameters for call to function log
        MOV     R2,#logTemp & 0xff
        MOV     R3,#(logTemp >> 8) & 0xff
        MOV     R1,#0x4
        LCALL   log
??getLogHandle_2:
        MOV     R7,#0x2
        LJMP    ?FUNC_LEAVE_XDATA

        RSEG NEAR_CODE:CODE:NOROOT(0)
?Subroutine0:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        MOVX    @DPTR,A
        MOV     DPTR,#logTemp
        MOV     A,#0x2
        MOVX    @DPTR,A
        INC     DPTR
        RET

        END
// 
// 162 bytes in segment NEAR_CODE
// 
// 162 bytes of CODE memory
//
//Errors: none
//Warnings: none
