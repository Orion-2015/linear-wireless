///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.3.10338/W32 for 8051        11/Aug/2012  13:38:22 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  near                                              /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data                                              /
//    Dptr setup         =  1,16                                              /
//    Source file        =  E:\linear-wireless\Components\simpliciti\nwk_appl /
//                          ications\nwk_ping.c                               /
//    Command line       =  -f E:\linear-wireless\Projects\Examples\SRF04\Cas /
//                          cading_End_Devices\IAR\Configuration\End_Device\s /
//                          mpl_config.dat (-DNUM_CONNECTIONS=2               /
//                          -DSIZE_INFRAME_Q=5 -DSIZE_OUTFRAME_Q=1            /
//                          -DEND_DEVICE -DFWVERSION=2) -f                    /
//                          E:\linear-wireless\Projects\Examples\SRF04\Cascad /
//                          ing_End_Devices\IAR\Configuration\smpl_nwk_config /
//                          .dat (-DMAX_HOPS=3 -DMAX_HOPS_FROM_ME=3           /
//                          -DCOMMAND_SIZE=10 -DLOGTEMP_SIZE=100              /
//                          -DMAX_HOPS_FROM_AP=1 -DMAX_NWK_PAYLOAD=34         /
//                          -DMAX_APP_PAYLOAD=50 -DDEFAULT_LINK_TOKEN=0x01020 /
//                          304 -DDEFAULT_JOIN_TOKEN=0x05060708               /
//                          -DxFREQUENCY_AGILITY -DAPP_AUTO_ACK               /
//                          -DxEXTENDED_API -DxSMPL_SECURE                    /
//                          -DxNVOBJECT_SUPPORT -DxSW_TIMER                   /
//                          -DxFREQUENCY_HOPPING -DNWK_PLL_REFERENCE_CLOCK    /
//                          -DBSP_TIMER_USED=1 -DNWK_PLL_SHOW_LOCATION_INDICA /
//                          TORS -DUART_NUMBER=UART_NUMBER_0                  /
//                          -DUART_LOCATION=UART_LOCATION_1                   /
//                          -DUART_BAUD_RATE=19200 -DUART_FLOW_CONTROL=UART_F /
//                          LOW_CONTROL_OFF -DUART_PARITY_MODE=UART_PARITY_NO /
//                          NE -DUART_STOP_BITS=UART_1_STOP_BIT -DCOMDEBUG)   /
//                          -DLOGINFO E:\linear-wireless\Components\simplicit /
//                          i\nwk_applications\nwk_ping.c -D                  /
//                          MCU_H=<ioCC1110.h> -D MRFI_CC1110 -lb             /
//                          E:\linear-wireless\Projects\Examples\SRF04\Cascad /
//                          ing_End_Devices\IAR\CC1110-EndDevice\List\ -o     /
//                          E:\linear-wireless\Projects\Examples\SRF04\Cascad /
//                          ing_End_Devices\IAR\CC1110-EndDevice\Obj\ -e      /
//                          --debug --core=plain --dptr=16,1                  /
//                          --data_model=large --code_model=near              /
//                          --calling_convention=xdata_reentrant              /
//                          --place_constants=data --nr_virtual_regs 8 -I     /
//                          E:\linear-wireless\Projects\Examples\SRF04\Cascad /
//                          ing_End_Devices\IAR\..\..\..\..\..\Components\bsp /
//                          \ -I E:\linear-wireless\Projects\Examples\SRF04\C /
//                          ascading_End_Devices\IAR\..\..\..\..\..\Component /
//                          s\bsp\drivers\ -I E:\linear-wireless\Projects\Exa /
//                          mples\SRF04\Cascading_End_Devices\IAR\..\..\..\.. /
//                          \..\Components\bsp\boards\SRF04EB\ -I             /
//                          E:\linear-wireless\Projects\Examples\SRF04\Cascad /
//                          ing_End_Devices\IAR\..\..\..\..\..\Components\mrf /
//                          i\ -I E:\linear-wireless\Projects\Examples\SRF04\ /
//                          Cascading_End_Devices\IAR\..\..\..\..\..\Componen /
//                          ts\SimpliciTI\nwk\ -I E:\linear-wireless\Projects /
//                          \Examples\SRF04\Cascading_End_Devices\IAR\..\..\. /
//                          .\..\..\Components\SimpliciTI\nwk_applications\   /
//                          -I E:\linear-wireless\Projects\Examples\SRF04\Cas /
//                          cading_End_Devices\IAR\..\..\..\..\..\Components\ /
//                          ApplicationFramework\ -Ohz                        /
//    List file          =  E:\linear-wireless\Projects\Examples\SRF04\Cascad /
//                          ing_End_Devices\IAR\CC1110-EndDevice\List\nwk_pin /
//                          g.s51                                             /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME nwk_ping

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?ALLOC_XSTACK8
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?FUNC_ENTER_XDATA
        EXTERN ?FUNC_LEAVE_XDATA
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?V0
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN __INIT_XDATA_Z

        PUBLIC nwk_ping
        PUBLIC nwk_pingInit
        PUBLIC nwk_processPing

        EXTERN MRFI_RandomByte
        EXTERN nwk_getConnInfo
        EXTERN MRFI_GetRadioState
        EXTERN SMPL_Ioctl
        EXTERN MRFI_WakeUp
        EXTERN MRFI_RxOn
        EXTERN MRFI_ReplyDelay
        EXTERN MRFI_Sleep
        EXTERN MRFI_RxIdle
        EXTERN nwk_isValidReply
        EXTERN MRFI_PostKillSem
        EXTERN nwk_buildFrame
        EXTERN memcpy
        EXTERN nwk_sendFrame


        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
sTid:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG NEAR_CODE:CODE:NOROOT(0)
nwk_pingInit:
        CODE
        PUSH    DPL
        PUSH    DPH
        ; Saved register size: 2
        ; Auto size: 0
        ; Setup parameters for call to function MRFI_RandomByte
        LCALL   MRFI_RandomByte
        MOV     A,R1
        MOV     DPTR,#sTid
        MOVX    @DPTR,A
        POP     DPH
        POP     DPL
        RET

        RSEG NEAR_CODE:CODE:NOROOT(0)
nwk_ping:
        CODE
        MOV     A,#-0xb
        LCALL   ?FUNC_ENTER_XDATA
        ; Saved register size: 11
        ; Auto size: 9
        MOV     A,#-0x9
        LCALL   ?ALLOC_XSTACK8
        MOV     ?V0 + 0,R1
        ; Setup parameters for call to function nwk_getConnInfo
        LCALL   nwk_getConnInfo
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     R6,?V0 + 2
        MOV     R7,?V0 + 3
        MOV     ?V0 + 1,#0x0
        ; Setup parameters for call to function MRFI_GetRadioState
        LCALL   MRFI_GetRadioState
        MOV     A,R1
        MOV     ?V0 + 2,A
        MOV     A,R6
        ORL     A,R7
        JZ      ??nwk_ping_0
        MOV     A,#-0x1
        XRL     A,?V0 + 0
        JNZ     ??nwk_ping_1
??nwk_ping_0:
        MOV     R1,#0x2
        LJMP    ??nwk_ping_2
??nwk_ping_1:
        MOV     A,R6
        ADD     A,#0x3
        MOV     R0,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R1,A
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        LCALL   ?Subroutine1
??CrossCallReturnLabel_0:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x2
        MOVX    @DPTR,A
        MOV     A,#0x7
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x1
        MOVX    @DPTR,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        MOV     DPTR,#sTid
        MOVX    A,@DPTR
        PUSH    A
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
        MOVX    @DPTR,A
        ; Setup parameters for call to function SMPL_Ioctl
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R2,#0x3
        MOV     R1,#0x2
        LCALL   SMPL_Ioctl
        MOV     A,#0x7
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x1
        LCALL   ?Subroutine1
??CrossCallReturnLabel_1:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
        MOV     A,#0x3
        XRL     A,?V0 + 2
        JZ      ??nwk_ping_3
        MOV     A,#0x1
        XRL     A,?V0 + 2
        JNZ     ??nwk_ping_4
        ; Setup parameters for call to function MRFI_WakeUp
        LCALL   MRFI_WakeUp
??nwk_ping_4:
        ; Setup parameters for call to function MRFI_RxOn
        LCALL   MRFI_RxOn
??nwk_ping_3:
        ; Setup parameters for call to function MRFI_ReplyDelay
        LCALL   MRFI_ReplyDelay
        MOV     A,#0x3
        XRL     A,?V0 + 2
        JZ      ??nwk_ping_5
        MOV     A,#0x1
        XRL     A,?V0 + 2
        JNZ     ??nwk_ping_6
        ; Setup parameters for call to function MRFI_Sleep
        LCALL   MRFI_Sleep
        SJMP    ??nwk_ping_5
??nwk_ping_6:
        ; Setup parameters for call to function MRFI_RxIdle
        LCALL   MRFI_RxIdle
??nwk_ping_5:
        ; Setup parameters for call to function SMPL_Ioctl
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R2,#0x2
        MOV     R1,#0x2
        LCALL   SMPL_Ioctl
        MOV     A,R1
        JNZ     ??nwk_ping_7
        MOV     ?V0 + 1,#0x1
        MOV     DPTR,#sTid
        MOVX    A,@DPTR
        INC     A
        MOVX    @DPTR,A
??nwk_ping_7:
        MOV     A,?V0 + 1
        MOV     C,0xE0 /* A   */.0
        CPL     C
        CLR     A
        RLC     A
        MOV     R1,A
??nwk_ping_2:
        MOV     A,#0x9
        LCALL   ?DEALLOC_XSTACK8
        REQUIRE ?Subroutine0
        ; // Fall through to label ?Subroutine0

        RSEG NEAR_CODE:CODE:NOROOT(0)
?Subroutine0:
        MOV     R7,#0x4
        LJMP    ?FUNC_LEAVE_XDATA

        RSEG NEAR_CODE:CODE:NOROOT(0)
?Subroutine1:
        MOVX    @DPTR,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R0,DPL
        MOV     R1,DPH
        MOV     A,#0x4
        RET

        RSEG NEAR_CODE:CODE:NOROOT(0)
nwk_processPing:
        CODE
        MOV     A,#-0xb
        LCALL   ?FUNC_ENTER_XDATA
        ; Saved register size: 11
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        ; Setup parameters for call to function nwk_isValidReply
        MOV     R5,#0x1
        MOV     R4,#0x0
        MOV     DPTR,#sTid
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   nwk_isValidReply
        MOV     A,R1
        JNZ     ??nwk_processPing_0
        ; Setup parameters for call to function MRFI_PostKillSem
        LCALL   MRFI_PostKillSem
        MOV     R1,#0x1
        SJMP    ??nwk_processPing_1
??nwk_processPing_0:
        MOV     A,R6
        ADD     A,#0x6
        MOV     R2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R3,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        XRL     A,#0x1
        JNZ     ??nwk_processPing_2
        ; Setup parameters for call to function nwk_buildFrame
        MOV     R5,#0x3
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        ADD     A,#-0x5
        MOV     R4,A
        MOV     R1,#0x1
        LCALL   nwk_buildFrame
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R1,?V0 + 1
        MOV     A,R2
        ORL     A,R1
        JZ      ??nwk_processPing_2
        ; Setup parameters for call to function memcpy
        MOV     ?V0 + 2,#0x1
        MOV     ?V0 + 3,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        MOV     A,R6
        ADD     A,#0x2
        MOV     R4,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R5,A
        MOV     A,R2
        ADD     A,#0x3
        INC     R2
        INC     R2
        INC     R2
        MOV     A,R1
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   memcpy
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        SETB    0xE0 /* A   */.7
        MOVX    @DPTR,A
        ; Setup parameters for call to function nwk_sendFrame
        MOV     R1,#0x0
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   nwk_sendFrame
??nwk_processPing_2:
        MOV     R1,#0x0
??nwk_processPing_1:
        LJMP    ?Subroutine0

        END
// 
// 415 bytes in segment NEAR_CODE
//   1 byte  in segment XDATA_Z
// 
// 415 bytes of CODE  memory
//   1 byte  of XDATA memory
//
//Errors: none
//Warnings: none
