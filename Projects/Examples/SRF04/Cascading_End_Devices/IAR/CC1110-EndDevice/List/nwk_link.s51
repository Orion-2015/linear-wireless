///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.3.10338/W32 for 8051        11/Aug/2012  13:38:22 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  near                                              /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data                                              /
//    Dptr setup         =  1,16                                              /
//    Source file        =  E:\linear-wireless\Components\simpliciti\nwk_appl /
//                          ications\nwk_link.c                               /
//    Command line       =  -f E:\linear-wireless\Projects\Examples\SRF04\Cas /
//                          cading_End_Devices\IAR\Configuration\End_Device\s /
//                          mpl_config.dat (-DNUM_CONNECTIONS=2               /
//                          -DSIZE_INFRAME_Q=5 -DSIZE_OUTFRAME_Q=1            /
//                          -DEND_DEVICE -DFWVERSION=2) -f                    /
//                          E:\linear-wireless\Projects\Examples\SRF04\Cascad /
//                          ing_End_Devices\IAR\Configuration\smpl_nwk_config /
//                          .dat (-DMAX_HOPS=3 -DMAX_HOPS_FROM_ME=3           /
//                          -DCOMMAND_SIZE=10 -DLOGTEMP_SIZE=100              /
//                          -DMAX_HOPS_FROM_AP=1 -DMAX_NWK_PAYLOAD=34         /
//                          -DMAX_APP_PAYLOAD=50 -DDEFAULT_LINK_TOKEN=0x01020 /
//                          304 -DDEFAULT_JOIN_TOKEN=0x05060708               /
//                          -DxFREQUENCY_AGILITY -DAPP_AUTO_ACK               /
//                          -DxEXTENDED_API -DxSMPL_SECURE                    /
//                          -DxNVOBJECT_SUPPORT -DxSW_TIMER                   /
//                          -DxFREQUENCY_HOPPING -DNWK_PLL_REFERENCE_CLOCK    /
//                          -DBSP_TIMER_USED=1 -DNWK_PLL_SHOW_LOCATION_INDICA /
//                          TORS -DUART_NUMBER=UART_NUMBER_0                  /
//                          -DUART_LOCATION=UART_LOCATION_1                   /
//                          -DUART_BAUD_RATE=19200 -DUART_FLOW_CONTROL=UART_F /
//                          LOW_CONTROL_OFF -DUART_PARITY_MODE=UART_PARITY_NO /
//                          NE -DUART_STOP_BITS=UART_1_STOP_BIT -DCOMDEBUG)   /
//                          -DLOGINFO E:\linear-wireless\Components\simplicit /
//                          i\nwk_applications\nwk_link.c -D                  /
//                          MCU_H=<ioCC1110.h> -D MRFI_CC1110 -lb             /
//                          E:\linear-wireless\Projects\Examples\SRF04\Cascad /
//                          ing_End_Devices\IAR\CC1110-EndDevice\List\ -o     /
//                          E:\linear-wireless\Projects\Examples\SRF04\Cascad /
//                          ing_End_Devices\IAR\CC1110-EndDevice\Obj\ -e      /
//                          --debug --core=plain --dptr=16,1                  /
//                          --data_model=large --code_model=near              /
//                          --calling_convention=xdata_reentrant              /
//                          --place_constants=data --nr_virtual_regs 8 -I     /
//                          E:\linear-wireless\Projects\Examples\SRF04\Cascad /
//                          ing_End_Devices\IAR\..\..\..\..\..\Components\bsp /
//                          \ -I E:\linear-wireless\Projects\Examples\SRF04\C /
//                          ascading_End_Devices\IAR\..\..\..\..\..\Component /
//                          s\bsp\drivers\ -I E:\linear-wireless\Projects\Exa /
//                          mples\SRF04\Cascading_End_Devices\IAR\..\..\..\.. /
//                          \..\Components\bsp\boards\SRF04EB\ -I             /
//                          E:\linear-wireless\Projects\Examples\SRF04\Cascad /
//                          ing_End_Devices\IAR\..\..\..\..\..\Components\mrf /
//                          i\ -I E:\linear-wireless\Projects\Examples\SRF04\ /
//                          Cascading_End_Devices\IAR\..\..\..\..\..\Componen /
//                          ts\SimpliciTI\nwk\ -I E:\linear-wireless\Projects /
//                          \Examples\SRF04\Cascading_End_Devices\IAR\..\..\. /
//                          .\..\..\Components\SimpliciTI\nwk_applications\   /
//                          -I E:\linear-wireless\Projects\Examples\SRF04\Cas /
//                          cading_End_Devices\IAR\..\..\..\..\..\Components\ /
//                          ApplicationFramework\ -Ohz                        /
//    List file          =  E:\linear-wireless\Projects\Examples\SRF04\Cascad /
//                          ing_End_Devices\IAR\CC1110-EndDevice\List\nwk_lin /
//                          k.s51                                             /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME nwk_link

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?ALLOC_XSTACK8
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?FUNC_ENTER_XDATA
        EXTERN ?FUNC_LEAVE_XDATA
        EXTERN ?L_EQ_X
        EXTERN ?L_MOV_TO_X
        EXTERN ?L_MOV_X
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?V0
        EXTERN ?XLOAD_R2345
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN ?XSTORE_R2345
        EXTERN __INIT_XDATA_I
        EXTERN __INIT_XDATA_Z

        PUBWEAK _A_IEN0
        PUBWEAK __Constant_1020304
        PUBLIC nwk_getLinkToken
        PUBLIC nwk_getLocalLinkID
        PUBLIC nwk_link
        PUBLIC nwk_linkInit
        PUBLIC nwk_processLink
        PUBLIC nwk_setLinkToken
        PUBLIC nwk_setListenContext

        EXTERN MRFI_RandomByte
        EXTERN memset
        EXTERN nwk_getNextConnection
        EXTERN nwk_allocateLocalRxPort
        EXTERN nwk_freeConnection
        EXTERN nwk_getBCastAddress
        EXTERN memcpy
        EXTERN nwk_putNumObjectIntoMsg
        EXTERN nwk_getMyRxType
        EXTERN nwk_getProtocolVersion
        EXTERN SMPL_Ioctl
        EXTERN MRFI_GetRadioState
        EXTERN MRFI_WakeUp
        EXTERN MRFI_RxOn
        EXTERN MRFI_ReplyDelay
        EXTERN MRFI_Sleep
        EXTERN MRFI_RxIdle
        EXTERN nwk_getNumObjectFromMsg
        EXTERN nwk_isLinkDuplicate
        EXTERN nwk_buildFrame
        EXTERN nwk_sendFrame
        EXTERN nwk_isValidReply
        EXTERN MRFI_PostKillSem


        ASEGN SFR_AN:DATA:NOROOT,0a8H
// union <unnamed> volatile __sfr _A_IEN0
_A_IEN0:
        DATA8
        DS 1

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA32
sLinkToken:
        DS 4
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
sListenActive:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
sServiceLinkID:
        DS 2
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
sNumLinkers:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
sTid:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG NEAR_CODE:CODE:NOROOT(0)
nwk_linkInit:
        CODE
        MOV     A,#-0xb
        LCALL   ?FUNC_ENTER_XDATA
        ; Saved register size: 11
        ; Auto size: 0
        MOV     DPTR,#sLinkToken
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        ORL     A,?V0 + 2
        ORL     A,?V0 + 3
        JNZ     ??nwk_linkInit_0
        MOV     DPTR,#__Constant_1020304
        LCALL   ?XLOAD_R2345
        MOV     DPTR,#sLinkToken
        LCALL   ?XSTORE_R2345
??nwk_linkInit_0:
        ; Setup parameters for call to function MRFI_RandomByte
        LCALL   MRFI_RandomByte
        MOV     A,R1
        MOV     DPTR,#sTid
        MOVX    @DPTR,A
        JZ      ??nwk_linkInit_0
        ; Setup parameters for call to function memset
        MOV     ?V0 + 0,#0x2
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     R2,#sServiceLinkID & 0xff
        MOV     R3,#(sServiceLinkID >> 8) & 0xff
        LCALL   memset
        MOV     A,#0x2
        REQUIRE ?Subroutine0
        ; // Fall through to label ?Subroutine0

        RSEG NEAR_CODE:CODE:NOROOT(0)
?Subroutine0:
        LCALL   ?DEALLOC_XSTACK8
        REQUIRE ??Subroutine9_0
        ; // Fall through to label ??Subroutine9_0

        RSEG NEAR_CODE:CODE:NOROOT(0)
??Subroutine9_0:
        MOV     R7,#0x4
        LJMP    ?FUNC_LEAVE_XDATA

        RSEG NEAR_CODE:CODE:NOROOT(0)
nwk_setLinkToken:
        CODE
        MOV     A,#-0xb
        LCALL   ?FUNC_ENTER_XDATA
        ; Saved register size: 11
        ; Auto size: 0
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     ?V0 + 2,R4
        MOV     ?V0 + 3,R5
        MOV     A,R2
        ORL     A,?V0 + 1
        ORL     A,?V0 + 2
        ORL     A,?V0 + 3
        JZ      ??nwk_setLinkToken_0
        MOV     DPTR,#sLinkToken
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_TO_X
??nwk_setLinkToken_0:
        SJMP    ??Subroutine9_0

        RSEG NEAR_CODE:CODE:NOROOT(0)
nwk_getLinkToken:
        CODE
        MOV     A,#-0x8
        LCALL   ?FUNC_ENTER_XDATA
        ; Saved register size: 8
        ; Auto size: 0
        MOV     A,R2
        MOV     R0,A
        MOV     A,R3
        MOV     R1,A
        MOV     A,R0
        ORL     A,R1
        JZ      ??nwk_getLinkToken_0
        MOV     DPTR,#sLinkToken
        LCALL   ?XLOAD_R2345
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?XSTORE_R2345
??nwk_getLinkToken_0:
        REQUIRE ?Subroutine1
        ; // Fall through to label ?Subroutine1

        RSEG NEAR_CODE:CODE:NOROOT(0)
?Subroutine1:
        MOV     R7,#0x1
        LJMP    ?FUNC_LEAVE_XDATA

        RSEG NEAR_CODE:CODE:NOROOT(0)
nwk_link:
        CODE
        MOV     A,#-0xb
        LCALL   ?FUNC_ENTER_XDATA
        ; Saved register size: 11
        ; Auto size: 17
        MOV     A,#-0x11
        LCALL   ?ALLOC_XSTACK8
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        ; Setup parameters for call to function nwk_getNextConnection
        LCALL   nwk_getNextConnection
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     R6,?V0 + 2
        MOV     R7,?V0 + 3
        MOV     A,R6
        ORL     A,R7
        JNZ     $+5
        LJMP    ??nwk_link_0
        ; Setup parameters for call to function nwk_allocateLocalRxPort
        MOV     R1,#0x1
        LCALL   nwk_allocateLocalRxPort
        MOV     A,R1
        JNZ     ??nwk_link_1
        ; Setup parameters for call to function nwk_freeConnection
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   nwk_freeConnection
        LJMP    ??nwk_link_0
??nwk_link_1:
        ; Setup parameters for call to function memcpy
        MOV     ?V0 + 2,#0x1
        MOV     ?V0 + 3,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        ; Setup parameters for call to function nwk_getBCastAddress
        LCALL   nwk_getBCastAddress
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
        MOV     R5,A
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??Subroutine11_0
??CrossCallReturnLabel_15:
        LCALL   ?DEALLOC_XSTACK8
        MOV     DPL,?XSP + 0
        MOV     R0,DPL
        MOV     R1,DPH
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,DPL
        MOV     R1,DPH
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x9
        MOVX    @DPTR,A
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x2
        MOVX    @DPTR,A
        ; Setup parameters for call to function nwk_putNumObjectIntoMsg
        MOV     R1,#0x4
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R2,#sLinkToken & 0xff
        MOV     R3,#(sLinkToken >> 8) & 0xff
        LCALL   nwk_putNumObjectIntoMsg
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        POP     A
        MOVX    @DPTR,A
        MOV     DPTR,#sTid
        MOVX    A,@DPTR
        PUSH    A
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        POP     A
        MOVX    @DPTR,A
        ; Setup parameters for call to function nwk_getMyRxType
        LCALL   nwk_getMyRxType
        MOV     A,#0xf
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R1
        MOVX    @DPTR,A
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x1
        MOVX    @DPTR,A
        ; Setup parameters for call to function nwk_getProtocolVersion
        LCALL   nwk_getProtocolVersion
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R1
        MOVX    @DPTR,A
        ; Setup parameters for call to function SMPL_Ioctl
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R2,#0x3
        MOV     R1,#0x2
        LCALL   SMPL_Ioctl
        MOV     A,R1
        MOV     ?V0 + 2,A
        JZ      ??nwk_link_2
        ; Setup parameters for call to function nwk_freeConnection
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   nwk_freeConnection
        MOV     R1,?V0 + 2
        LJMP    ??nwk_link_3
??nwk_link_2:
        ; Setup parameters for call to function MRFI_GetRadioState
        LCALL   MRFI_GetRadioState
        MOV     A,R1
        MOV     ?V0 + 2,A
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x2
        MOVX    @DPTR,A
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     R0,DPL
        MOV     R1,DPH
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x3
        MOV     R0,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R1,A
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        MOV     A,#0x3
        XRL     A,?V0 + 2
        JZ      ??nwk_link_4
        MOV     A,#0x1
        XRL     A,?V0 + 2
        JNZ     ??nwk_link_5
        ; Setup parameters for call to function MRFI_WakeUp
        LCALL   MRFI_WakeUp
??nwk_link_5:
        ; Setup parameters for call to function MRFI_RxOn
        LCALL   MRFI_RxOn
??nwk_link_4:
        ; Setup parameters for call to function MRFI_ReplyDelay
        LCALL   MRFI_ReplyDelay
        MOV     A,#0x3
        XRL     A,?V0 + 2
        JZ      ??nwk_link_6
        MOV     A,#0x1
        XRL     A,?V0 + 2
        JNZ     ??nwk_link_7
        ; Setup parameters for call to function MRFI_Sleep
        LCALL   MRFI_Sleep
        SJMP    ??nwk_link_6
??nwk_link_7:
        ; Setup parameters for call to function MRFI_RxIdle
        LCALL   MRFI_RxIdle
??nwk_link_6:
        ; Setup parameters for call to function SMPL_Ioctl
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R2,#0x2
        MOV     R1,#0x2
        LCALL   SMPL_Ioctl
        MOV     A,R1
        JNZ     ??nwk_link_8
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        ANL     A,#0x7f
        MOV     R0,A
        MOV     A,#0x1
        XRL     A,R0
        JZ      ??nwk_link_9
        MOV     A,#0x3
        XRL     A,R0
        JZ      ??nwk_link_9
        ; Setup parameters for call to function nwk_freeConnection
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   nwk_freeConnection
        MOV     R1,#0x5
        SJMP    ??nwk_link_3
??nwk_link_9:
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,#0x2
        MOVX    @DPTR,A
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine7
??CrossCallReturnLabel_8:
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        MOVX    @DPTR,A
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        MOV     R0,DPL
        MOV     R1,DPH
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        XRL     A,#0x40
        MOV     DPL,R0
        MOV     DPH,R1
        JNZ     ??nwk_link_10
        MOV     A,#0x1
        SJMP    ??nwk_link_11
??nwk_link_8:
        ; Setup parameters for call to function nwk_freeConnection
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   nwk_freeConnection
        MOV     R1,#0x1
        SJMP    ??nwk_link_3
??nwk_link_10:
        MOV     A,#0x3
??nwk_link_11:
        MOVX    @DPTR,A
        MOV     DPTR,#sTid
        MOVX    A,@DPTR
        INC     A
        MOVX    @DPTR,A
        MOVX    A,@DPTR
        JNZ     ??nwk_link_12
        MOV     A,#0x1
        MOVX    @DPTR,A
??nwk_link_12:
        MOV     R1,#0x0
        SJMP    ??nwk_link_3
??nwk_link_0:
        MOV     R1,#0x3
??nwk_link_3:
        MOV     A,#0x11
        LJMP    ?Subroutine0

        RSEG NEAR_CODE:CODE:NOROOT(0)
smpl_send_link_reply:
        CODE
        MOV     A,#-0xf
        LCALL   ?FUNC_ENTER_XDATA
        ; Saved register size: 15
        ; Auto size: 8
        MOV     A,#-0x8
        LCALL   ?ALLOC_XSTACK8
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        ADD     A,#-0x5
        MOV     R0,A
        CLR     A
        ADDC    A,#-0x1
        MOV     R1,A
        CLR     C
        MOV     A,R0
        SUBB    A,#0x9
        MOV     A,R1
        SUBB    A,#0x0
        MOV     C,0xD0 /* PSW */.2
        XRL     A,PSW
        RLC     A
        JC      ??smpl_send_link_reply_0
        ; Setup parameters for call to function nwk_getProtocolVersion
        LCALL   nwk_getProtocolVersion
        MOV     A,R1
        MOV     R0,A
        MOV     A,R6
        ADD     A,#0xe
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        XRL     A,R0
        JZ      ??smpl_send_link_reply_0
??smpl_send_link_reply_1:
        MOV     R1,#0x2
??smpl_send_link_reply_2:
        MOV     A,#0x8
        LCALL   ?DEALLOC_XSTACK8
        MOV     R7,#0x8
        LJMP    ?FUNC_LEAVE_XDATA
??smpl_send_link_reply_0:
        ; Setup parameters for call to function nwk_getNumObjectFromMsg
        MOV     R1,#0x4
        MOV     A,R1
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,R6
        ADD     A,#0x8
        MOV     R2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   nwk_getNumObjectFromMsg
        PUSH    DPL
        PUSH    DPH
        MOV     DPTR,#sLinkToken
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        POP     DPH
        POP     DPL
        MOV     R0,#?V0 + 0
        LCALL   ?L_EQ_X
        JNZ     ??smpl_send_link_reply_1
        MOV     A,R6
        ADD     A,#0xc
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     ?V0 + 2,A
        MOV     A,R6
        ADD     A,#0x2
        MOV     ?V0 + 6,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     ?V0 + 7,A
        ; Setup parameters for call to function nwk_isLinkDuplicate
        MOV     R1,?V0 + 2
        MOV     R2,?V0 + 6
        MOV     R3,A
        LCALL   nwk_isLinkDuplicate
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R0,?V0 + 0
        MOV     R1,?V0 + 1
        MOV     A,R0
        ORL     A,R1
        JZ      ??smpl_send_link_reply_3
        LCALL   ?Subroutine4
??CrossCallReturnLabel_4:
        PUSH    A
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
        MOVX    @DPTR,A
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        POP     A
        MOVX    @DPTR,A
        ; Setup parameters for call to function nwk_getMyRxType
        LCALL   nwk_getMyRxType
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R1
        LCALL   ?Subroutine2
??CrossCallReturnLabel_0:
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R0,?V0 + 0
        MOV     R1,?V0 + 1
        MOV     A,R0
        MOV     R6,A
        MOV     A,R1
        MOV     R7,A
        MOV     A,R0
        ORL     A,R1
        JZ      ??smpl_send_link_reply_4
        ; Setup parameters for call to function memcpy
        MOV     ?V0 + 0,#0x1
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        LCALL   ?Subroutine5
??CrossCallReturnLabel_12:
        LCALL   ?DEALLOC_XSTACK8
        ; Setup parameters for call to function nwk_sendFrame
        MOV     R1,#0x0
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   nwk_sendFrame
??smpl_send_link_reply_4:
        MOV     R1,#0x1
        LJMP    ??smpl_send_link_reply_2
??smpl_send_link_reply_3:
        MOV     DPTR,#sListenActive
        MOVX    A,@DPTR
        JNZ     $+5
        LJMP    ??smpl_send_link_reply_1
        ; Setup parameters for call to function nwk_getNextConnection
        LCALL   nwk_getNextConnection
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     A,R2
        ORL     A,?V0 + 1
        JZ      ??smpl_send_link_reply_4
        ; Setup parameters for call to function memcpy
        MOV     ?V0 + 4,#0x1
        MOV     ?V0 + 5,#0x0
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
        MOV     R4,?V0 + 6
        MOV     R5,?V0 + 7
        MOV     A,R2
        ADD     A,#0x3
        INC     R2
        INC     R2
        INC     R2
        MOV     A,R3
        LCALL   ??Subroutine10_0
??CrossCallReturnLabel_14:
        LCALL   ?DEALLOC_XSTACK8
        ; Setup parameters for call to function nwk_allocateLocalRxPort
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        MOV     R1,#0x2
        LCALL   nwk_allocateLocalRxPort
        MOV     A,R1
        JNZ     ??smpl_send_link_reply_5
??smpl_send_link_reply_6:
        ; Setup parameters for call to function nwk_freeConnection
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   nwk_freeConnection
        SJMP    ??smpl_send_link_reply_4
??smpl_send_link_reply_5:
        MOV     DPTR,#sNumLinkers
        MOVX    A,@DPTR
        XRL     A,#0x2
        JZ      ??smpl_send_link_reply_6
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        MOV     A,#0x1
        ADD     A,?V0 + 4
        LCALL   ?Subroutine3
??CrossCallReturnLabel_3:
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
        MOV     A,#sServiceLinkID & 0xff
        ADD     A,?V0 + 4
        MOV     DPL,A
        MOV     A,#(sServiceLinkID >> 8) & 0xff
        ADDC    A,#0x0
        MOV     DPH,A
        POP     A
        LCALL   ?Subroutine3
??CrossCallReturnLabel_2:
        MOV     A,?V0 + 2
        MOVX    @DPTR,A
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        MOV     A,#0x2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     R0,DPL
        MOV     R1,DPH
        MOV     A,R6
        ADD     A,#0xd
        MOV     DPL,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        XRL     A,#0x40
        MOV     DPL,R0
        MOV     DPH,R1
        JNZ     ??smpl_send_link_reply_7
        MOV     A,#0x1
        SJMP    ??smpl_send_link_reply_8
??smpl_send_link_reply_7:
        MOV     A,#0x3
??smpl_send_link_reply_8:
        LCALL   ?Subroutine6
??CrossCallReturnLabel_6:
        MOVX    A,@DPTR
        PUSH    A
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        POP     A
        MOVX    @DPTR,A
        ; Setup parameters for call to function nwk_getMyRxType
        LCALL   nwk_getMyRxType
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R1
        MOVX    @DPTR,A
        LCALL   ?Subroutine4
??CrossCallReturnLabel_5:
        PUSH    A
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
        LCALL   ?Subroutine2
??CrossCallReturnLabel_1:
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     R0,?V0 + 2
        MOV     R1,?V0 + 3
        MOV     A,R0
        MOV     R6,A
        MOV     A,R1
        MOV     R7,A
        MOV     A,R0
        ORL     A,R1
        JNZ     $+5
        LJMP    ??smpl_send_link_reply_6
        ; Setup parameters for call to function memcpy
        MOV     ?V0 + 2,#0x1
        MOV     ?V0 + 3,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
        LCALL   ?Subroutine5
??CrossCallReturnLabel_13:
        LCALL   ?DEALLOC_XSTACK8
        ; Setup parameters for call to function nwk_sendFrame
        MOV     R1,#0x0
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   nwk_sendFrame
        MOV     A,R1
        JZ      $+5
        LJMP    ??smpl_send_link_reply_6
        LJMP    ??smpl_send_link_reply_4

        RSEG NEAR_CODE:CODE:NOROOT(0)
?Subroutine5:
        MOV     R4,?V0 + 6
        MOV     R5,?V0 + 7
        MOV     A,R6
        ADD     A,#0x3
        INC     R2
        INC     R2
        INC     R2
        MOV     A,R7
        REQUIRE ??Subroutine10_0
        ; // Fall through to label ??Subroutine10_0

        RSEG NEAR_CODE:CODE:NOROOT(0)
??Subroutine10_0:
        ADDC    A,#0x0
        MOV     R3,A
        REQUIRE ??Subroutine11_0
        ; // Fall through to label ??Subroutine11_0

        RSEG NEAR_CODE:CODE:NOROOT(0)
??Subroutine11_0:
        LCALL   memcpy
        MOV     A,#0x2
        RET

        RSEG NEAR_CODE:CODE:NOROOT(0)
?Subroutine4:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x7f
        LCALL   ?Subroutine7
??CrossCallReturnLabel_9:
        MOVX    A,@DPTR
        RET

        RSEG NEAR_CODE:CODE:NOROOT(0)
?Subroutine7:
        LCALL   ?Subroutine8
??CrossCallReturnLabel_10:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET

        RSEG NEAR_CODE:CODE:NOROOT(0)
?Subroutine3:
        LCALL   ?Subroutine6
??CrossCallReturnLabel_7:
        INC     DPTR
        RET

        RSEG NEAR_CODE:CODE:NOROOT(0)
?Subroutine6:
        MOVX    @DPTR,A
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET

        RSEG NEAR_CODE:CODE:NOROOT(0)
?Subroutine2:
        LCALL   ?Subroutine8
??CrossCallReturnLabel_11:
        MOVX    A,@DPTR
        ANL     A,#0x7
        MOV     R0,A
        MOV     A,#0x3
        CLR     C
        SUBB    A,R0
        MOV     R5,A
        MOV     R4,#0x4
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R2,DPL
        MOV     R3,DPH
        MOV     R1,#0x2
        LCALL   nwk_buildFrame
        RET

        RSEG NEAR_CODE:CODE:NOROOT(0)
?Subroutine8:
        MOVX    @DPTR,A
        ; Setup parameters for call to function nwk_buildFrame
        ; Setup parameters for call to function nwk_buildFrame
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET

        RSEG NEAR_CODE:CODE:NOROOT(0)
nwk_processLink:
        CODE
        MOV     A,#-0x8
        LCALL   ?FUNC_ENTER_XDATA
        ; Saved register size: 8
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        ; Setup parameters for call to function nwk_isValidReply
        MOV     R5,#0x1
        MOV     R4,#0x0
        MOV     DPTR,#sTid
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   nwk_isValidReply
        MOV     A,R1
        JNZ     ??nwk_processLink_0
        ; Setup parameters for call to function MRFI_PostKillSem
        LCALL   MRFI_PostKillSem
        MOV     R1,#0x1
        SJMP    ??nwk_processLink_1
??nwk_processLink_0:
        MOV     A,R6
        ADD     A,#0x6
        MOV     R0,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        ADD     A,#-0x5
        MOV     R2,A
        CLR     A
        ADDC    A,#-0x1
        MOV     R3,A
        MOV     A,#0x8
        XRL     A,R2
        JNZ     ??nwk_processLink_2
        MOV     A,R3
??nwk_processLink_2:
        MOV     DPL,R0
        MOV     DPH,R1
        JNZ     ??nwk_processLink_3
        MOV     A,#0x1
        MOVX    @DPTR,A
        SJMP    ??nwk_processLink_4
??nwk_processLink_3:
        MOVX    A,@DPTR
        XRL     A,#0x1
        JNZ     ??nwk_processLink_5
??nwk_processLink_4:
        ; Setup parameters for call to function smpl_send_link_reply
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   smpl_send_link_reply
??nwk_processLink_5:
        MOV     R1,#0x0
??nwk_processLink_1:
        LJMP    ?Subroutine1

        RSEG NEAR_CODE:CODE:NOROOT(0)
nwk_getLocalLinkID:
        CODE
        MOV     A,#-0x9
        LCALL   ?FUNC_ENTER_XDATA
        ; Saved register size: 9
        ; Auto size: 0
        MOV     R1,#0x0
        MOV     C,0xa8.7
        CLR     A
        RLC     A
        MOV     R0,A
        CLR     0xa8.7
        MOV     DPTR,#sNumLinkers
        MOVX    A,@DPTR
        JZ      ??nwk_getLocalLinkID_0
        MOVX    A,@DPTR
        DEC     A
        MOVX    @DPTR,A
        MOV     A,R0
        MOV     C,0xE0 /* A   */.0
        MOV     0xa8.7,C
        MOV     A,0xa8
        ; Setup parameters for call to function nwk_setListenContext
        INC     R1
        LCALL   nwk_setListenContext
        MOV     DPTR,#sServiceLinkID
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     R0,#0x0
??nwk_getLocalLinkID_1:
        MOV     DPTR,#sNumLinkers
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     A,R0
        CLR     C
        SUBB    A,R2
        JNC     ??nwk_getLocalLinkID_2
        MOV     ?V0 + 0,R0
        MOV     A,#sServiceLinkID & 0xff
        ADD     A,?V0 + 0
        MOV     R2,A
        MOV     A,#(sServiceLinkID >> 8) & 0xff
        ADDC    A,#0x0
        MOV     R3,A
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    @DPTR,A
        INC     R0
        SJMP    ??nwk_getLocalLinkID_1
??nwk_getLocalLinkID_0:
        MOV     A,R0
        MOV     C,0xE0 /* A   */.0
        MOV     0xa8.7,C
        MOV     A,0xa8
??nwk_getLocalLinkID_2:
        MOV     R7,#0x2
        LJMP    ?FUNC_LEAVE_XDATA
        REQUIRE _A_IEN0

        RSEG NEAR_CODE:CODE:NOROOT(0)
nwk_setListenContext:
        CODE
        PUSH    DPL
        PUSH    DPH
        ; Saved register size: 2
        ; Auto size: 0
        MOV     A,R1
        JNZ     ??nwk_setListenContext_0
        MOV     A,#0x1
        SJMP    ??nwk_setListenContext_1
??nwk_setListenContext_0:
        CLR     A
??nwk_setListenContext_1:
        MOV     DPTR,#sListenActive
        MOVX    @DPTR,A
        POP     DPH
        POP     DPL
        RET

        RSEG XDATA_I:XDATA:NOROOT(0)
        DATA32
__Constant_1020304:
        DS 4
        REQUIRE `?<Initializer for __Constant_1020304>`
        REQUIRE __INIT_XDATA_I

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for __Constant_1020304>`:
        DATA32
        DD 16909060

        END
// 
// 1 419 bytes in segment NEAR_CODE
//     1 byte  in segment SFR_AN
//     4 bytes in segment XDATA_I
//     4 bytes in segment XDATA_ID
//     9 bytes in segment XDATA_Z
// 
// 1 419 bytes of CODE  memory (+ 4 bytes shared)
//     0 bytes of DATA  memory (+ 1 byte  shared)
//     9 bytes of XDATA memory (+ 4 bytes shared)
//
//Errors: none
//Warnings: none
