Warning[w6]: Type conflict for external/entry "debug", in module log against external/entry in module framework; prototyped function vs K&R function
  /* In module log: */
  /* K&R Function, args 0, attr 0 */
  int (__xdata_reentrant debug)();
  /* In module framework: */
  /* Function, args 1, attr 0 */
  void (__xdata_reentrant debug)(char *);
Warning[w6]: Type conflict for external/entry "getAckFlag", in module framework against external/entry in module nwk; types have different type attributes
  /* In module framework: */
  char getAckFlag;
  /* In module nwk: */
  char volatile getAckFlag;
Warning[w6]: Type conflict for external/entry "EnableRecv", in module main_linear against external/entry in module radio; prototyped function vs K&R function
  /* In module main_linear: */
  /* K&R Function, args 0, attr 0 */
  int (__xdata_reentrant EnableRecv)();
  /* In module radio: */
  /* Function, args 0, attr 0 */
  void (__xdata_reentrant EnableRecv)(void);
Warning[w6]: Type conflict for external/entry "EnableSend", in module mrfi against external/entry in module radio; prototyped function vs K&R function
  /* In module mrfi: */
  /* K&R Function, args 0, attr 0 */
  int (__xdata_reentrant EnableSend)();
  /* In module radio: */
  /* Function, args 0, attr 0 */
  void (__xdata_reentrant EnableSend)(void);
Warning[w6]: Type conflict for external/entry "InitRFIO", in module main_linear against external/entry in module radio; prototyped function vs K&R function
  /* In module main_linear: */
  /* K&R Function, args 0, attr 0 */
  int (__xdata_reentrant InitRFIO)();
  /* In module radio: */
  /* Function, args 0, attr 0 */
  void (__xdata_reentrant InitRFIO)(void);
Warning[w6]: Type conflict for external/entry "getErrorText", in module framework against external/entry in module radio; prototyped function vs K&R function
  /* In module framework: */
  /* K&R Function, args 0, attr 0 */
  int (__xdata_reentrant getErrorText)();
  /* In module radio: */
  /* Function, args 1, attr 0 */
  char * (__xdata_reentrant getErrorText)(smplStatus_t);
    typedef enum smplStatus smplStatus_t;
################################################################################
#                                                                              #
#      IAR Universal Linker V5.0.2.5/W32                                       #
#                                                                              #
#           Link time     =  11/Aug/2012  16:54:32                             #
#           Target CPU    =  x51                                               #
#           List file     =  E:\linear-wireless\Projects\Examples\SRF04\Cascad #
#                            ing_End_Devices\IAR\CC1110-EndDevice\List\Cascadi #
#                            ng_End_Devices.map                                #
#           Output file 1 =  E:\linear-wireless\Projects\Examples\SRF04\Cascad #
#                            ing_End_Devices\IAR\CC1110-EndDevice\Exe\Cascadin #
#                            g_End_Devices.d51                                 #
#                            Format: debug                                     #
#                            UBROF version 10.0.3                              #
#                            Using library modules for C-SPY (-rt)             #
#           Command line  =  "-IC:\Program Files\IAR Systems\Embedded Workbenc #
#                            h 6.0 Evaluation\8051\CONFIG\"                    #
#                            -D_NR_OF_BANKS=0 -D_CODEBANK_END=0                #
#                            -D_CODEBANK_START=0                               #
#                            E:\linear-wireless\Projects\Examples\SRF04\Cascad #
#                            ing_End_Devices\IAR\CC1110-EndDevice\Obj\bsp.r51  #
#                            E:\linear-wireless\Projects\Examples\SRF04\Cascad #
#                            ing_End_Devices\IAR\CC1110-EndDevice\Obj\channel. #
#                            r51                                               #
#                            E:\linear-wireless\Projects\Examples\SRF04\Cascad #
#                            ing_End_Devices\IAR\CC1110-EndDevice\Obj\detect.r #
#                            51                                                #
#                            E:\linear-wireless\Projects\Examples\SRF04\Cascad #
#                            ing_End_Devices\IAR\CC1110-EndDevice\Obj\framewor #
#                            k.r51                                             #
#                            E:\linear-wireless\Projects\Examples\SRF04\Cascad #
#                            ing_End_Devices\IAR\CC1110-EndDevice\Obj\log.r51  #
#                            E:\linear-wireless\Projects\Examples\SRF04\Cascad #
#                            ing_End_Devices\IAR\CC1110-EndDevice\Obj\logHandl #
#                            e.r51                                             #
#                            E:\linear-wireless\Projects\Examples\SRF04\Cascad #
#                            ing_End_Devices\IAR\CC1110-EndDevice\Obj\logLevel #
#                            .r51                                              #
#                            E:\linear-wireless\Projects\Examples\SRF04\Cascad #
#                            ing_End_Devices\IAR\CC1110-EndDevice\Obj\main_lin #
#                            ear.r51                                           #
#                            E:\linear-wireless\Projects\Examples\SRF04\Cascad #
#                            ing_End_Devices\IAR\CC1110-EndDevice\Obj\mrfi.r51 #
#                            E:\linear-wireless\Projects\Examples\SRF04\Cascad #
#                            ing_End_Devices\IAR\CC1110-EndDevice\Obj\nwk.r51  #
#                            E:\linear-wireless\Projects\Examples\SRF04\Cascad #
#                            ing_End_Devices\IAR\CC1110-EndDevice\Obj\nwk_QMgm #
#                            t.r51                                             #
#                            E:\linear-wireless\Projects\Examples\SRF04\Cascad #
#                            ing_End_Devices\IAR\CC1110-EndDevice\Obj\nwk_api. #
#                            r51                                               #
#                            E:\linear-wireless\Projects\Examples\SRF04\Cascad #
#                            ing_End_Devices\IAR\CC1110-EndDevice\Obj\nwk_fram #
#                            e.r51                                             #
#                            E:\linear-wireless\Projects\Examples\SRF04\Cascad #
#                            ing_End_Devices\IAR\CC1110-EndDevice\Obj\nwk_freq #
#                            .r51                                              #
#                            E:\linear-wireless\Projects\Examples\SRF04\Cascad #
#                            ing_End_Devices\IAR\CC1110-EndDevice\Obj\nwk_glob #
#                            als.r51                                           #
#                            E:\linear-wireless\Projects\Examples\SRF04\Cascad #
#                            ing_End_Devices\IAR\CC1110-EndDevice\Obj\nwk_ioct #
#                            l.r51                                             #
#                            E:\linear-wireless\Projects\Examples\SRF04\Cascad #
#                            ing_End_Devices\IAR\CC1110-EndDevice\Obj\nwk_join #
#                            .r51                                              #
#                            E:\linear-wireless\Projects\Examples\SRF04\Cascad #
#                            ing_End_Devices\IAR\CC1110-EndDevice\Obj\nwk_link #
#                            .r51                                              #
#                            E:\linear-wireless\Projects\Examples\SRF04\Cascad #
#                            ing_End_Devices\IAR\CC1110-EndDevice\Obj\nwk_mgmt #
#                            .r51                                              #
#                            E:\linear-wireless\Projects\Examples\SRF04\Cascad #
#                            ing_End_Devices\IAR\CC1110-EndDevice\Obj\nwk_ping #
#                            .r51                                              #
#                            E:\linear-wireless\Projects\Examples\SRF04\Cascad #
#                            ing_End_Devices\IAR\CC1110-EndDevice\Obj\nwk_pll. #
#                            r51                                               #
#                            E:\linear-wireless\Projects\Examples\SRF04\Cascad #
#                            ing_End_Devices\IAR\CC1110-EndDevice\Obj\nwk_secu #
#                            rity.r51                                          #
#                            E:\linear-wireless\Projects\Examples\SRF04\Cascad #
#                            ing_End_Devices\IAR\CC1110-EndDevice\Obj\radio.r5 #
#                            1                                                 #
#                            E:\linear-wireless\Projects\Examples\SRF04\Cascad #
#                            ing_End_Devices\IAR\CC1110-EndDevice\Obj\route.r5 #
#                            1                                                 #
#                            E:\linear-wireless\Projects\Examples\SRF04\Cascad #
#                            ing_End_Devices\IAR\CC1110-EndDevice\Obj\scan.r51 #
#                            E:\linear-wireless\Projects\Examples\SRF04\Cascad #
#                            ing_End_Devices\IAR\CC1110-EndDevice\Obj\stationD #
#                            ata.r51                                           #
#                            E:\linear-wireless\Projects\Examples\SRF04\Cascad #
#                            ing_End_Devices\IAR\CC1110-EndDevice\Obj\surplusC #
#                            harge.r51                                         #
#                            E:\linear-wireless\Projects\Examples\SRF04\Cascad #
#                            ing_End_Devices\IAR\CC1110-EndDevice\Obj\test.r51 #
#                            E:\linear-wireless\Projects\Examples\SRF04\Cascad #
#                            ing_End_Devices\IAR\CC1110-EndDevice\Obj\uart.r51 #
#                            -o                                                #
#                            E:\linear-wireless\Projects\Examples\SRF04\Cascad #
#                            ing_End_Devices\IAR\CC1110-EndDevice\Exe\Cascadin #
#                            g_End_Devices.d51                                 #
#                            -l                                                #
#                            E:\linear-wireless\Projects\Examples\SRF04\Cascad #
#                            ing_End_Devices\IAR\CC1110-EndDevice\List\Cascadi #
#                            ng_End_Devices.map                                #
#                            -xs                                               #
#                            "-IC:\Program Files\IAR Systems\Embedded Workbenc #
#                            h 6.0 Evaluation\8051\LIB\"                       #
#                            -f                                                #
#                            "C:\Program Files\IAR Systems\Embedded Workbench  #
#                            6.0 Evaluation\8051\config\devices\Texas Instrume #
#                            nts\lnk51ew_cc1110F32.xcl"                        #
#                            (-D_IDATA0_START=0x00 -D_IDATA0_END=0xFF          #
#                            -D_PDATA0_START=0xF000 -D_PDATA0_END=0xF0FF       #
#                            -D_IXDATA0_START=0x00F000                         #
#                            -D_IXDATA0_END=0x00FDA1                           #
#                            -D_XDATA0_START=0x00F000 -D_XDATA0_END=0x00FDA1   #
#                            -D_CODE0_START=0x000000 -D_CODE0_END=0x007FFF     #
#                            -D?REGISTER_BANK=0x0 -D_REGISTER_BANK_START=0x0   #
#                            -D_BREG_START=0x00 -D?VB=0x20 -D?ESP=0x9B         #
#                            -Z(BIT)BREG=_BREG_START -Z(BIT)BIT_N=0-7F         #
#                            -Z(DATA)REGISTERS+8=_REGISTER_BANK_START          #
#                            -Z(DATA)BDATA_Z,BDATA_N,BDATA_I=20-2F             #
#                            -Z(DATA)VREG+_NR_OF_VIRTUAL_REGISTERS=08-7F       #
#                            -Z(DATA)PSP,XSP=08-7F -Z(DATA)DOVERLAY=08-7F      #
#                            -Z(DATA)DATA_I,DATA_Z,DATA_N=08-7F                #
#                            -U(IDATA)0-7F=(DATA)0-7F                          #
#                            -Z(IDATA)IDATA_I,IDATA_Z,IDATA_N=08-_IDATA0_END   #
#                            -Z(IDATA)ISTACK+_IDATA_STACK_SIZE#08-_IDATA0_END  #
#                            -Z(IDATA)IOVERLAY=08-FF -Z(CODE)INTVEC=0          #
#                            -Z(CODE)CSTART=_CODE0_START-_CODE0_END            #
#                            -Z(CODE)BIT_ID,BDATA_ID,DATA_ID,IDATA_ID,IXDATA_I #
#                            D,PDATA_ID,XDATA_ID=_CODE0_START-_CODE0_END       #
#                            -Z(CODE)RCODE,DIFUNCT,CODE_C,CODE_N,NEAR_CODE=_CO #
#                            DE0_START-_CODE0_END                              #
#                            -Z(CODE)CHECKSUM#_CODE0_END                       #
#                            -Z(XDATA)PDATA_Z,PDATA_I=_PDATA0_START-_PDATA0_EN #
#                            D                                                 #
#                            -P(XDATA)PDATA_N=_PDATA0_START-_PDATA0_END        #
#                            -Z(XDATA)PSTACK+_PDATA_STACK_SIZE=_PDATA0_START-_ #
#                            PDATA0_END                                        #
#                            -Z(XDATA)EXT_STACK+_EXTENDED_STACK_SIZE=_EXTENDED #
#                            _STACK_START                                      #
#                            -Z(XDATA)XSTACK+_XDATA_STACK_SIZE=_XDATA0_START-_ #
#                            XDATA0_END                                        #
#                            -Z(XDATA)IXDATA_Z,IXDATA_I=_IXDATA0_START-_IXDATA #
#                            0_END                                             #
#                            -P(XDATA)IXDATA_N=_IXDATA0_START-_IXDATA0_END     #
#                            -Z(XDATA)XDATA_Z,XDATA_I=_XDATA0_START-_XDATA0_EN #
#                            D                                                 #
#                            -P(XDATA)XDATA_N=_XDATA0_START-_XDATA0_END        #
#                            -Z(XDATA)XDATA_HEAP+_XDATA_HEAP_SIZE=_XDATA0_STAR #
#                            T-_XDATA0_END                                     #
#                            -Z(CONST)XDATA_ROM_C=_XDATA0_START-_XDATA0_END    #
#                            -cx51 -Z(XDATA)XDATA_SCRATCH=0xFDA2-0xFEFF)       #
#                            -D_NR_OF_VIRTUAL_REGISTERS=8 -D?PBANK=0xA0 -rt    #
#                            -s __program_start                                #
#                            "C:\Program Files\IAR Systems\Embedded Workbench  #
#                            6.0 Evaluation\8051\LIB\CLIB\cl-pli-nlxd-1e16x01. #
#                            r51"                                              #
#                            -D_IDATA_STACK_SIZE=0xC0                          #
#                            -D_EXTENDED_STACK_START=0x00                      #
#                            -D_EXTENDED_STACK_SIZE=0x00                       #
#                            -D_PDATA_STACK_SIZE=0x80                          #
#                            -D_XDATA_STACK_SIZE=0x3FF                         #
#                            -D_XDATA_HEAP_SIZE=0xFF -D_FAR_HEAP_SIZE=0xFFF    #
#                            -D_HUGE_HEAP_SIZE=0xFFF                           #
#                            -D_FAR22_HEAP_SIZE=0xFFF                          #
#                                                                              #
#                           Copyright (C) 1987-2010 IAR Systems AB.            #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at : CODE      000000D3  Relocatable, from module : CSTARTUP




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  __SystemLibrary          = CLib
  __calling_convention     = xdata_reentrant
  __code_model             = near
  __core                   = plain
  __data_model             = large
  __dptr_size              = 16
  __extended_stack         = disabled
  __location_for_constants = data
  __number_of_dptrs        = 1
  __rt_version             = 1



                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
INTVEC               CODE          00000000 - 00000085          86   com    0
CSTART               CODE          00000086 - 000000E4          5F   rel    0
BIT_ID               CODE               000000E5                     dse    0
DATA_ID              CODE               000000E5                     dse    0
PDATA_ID             CODE               000000E5                     dse    0
IXDATA_ID            CODE               000000E5                     dse    0
BDATA_ID             CODE               000000E5                     dse    0
IDATA_ID             CODE               000000E5                     dse    0
XDATA_ID             CODE          000000E5 - 0000044B         367   rel    0
RCODE                CODE          0000044C - 00001014         BC9   rel    0
DIFUNCT              CODE               00001015                     dse    0
CODE_N               CODE               00001015                     dse    0
CODE_C               CODE               00001015                     dse    0
NEAR_CODE            CODE          00001015 - 000052F5        42E1   rel    0
REGISTERS            DATA          00000000 - 00000007           8   rel    0
VREG                 DATA          00000008 - 0000000F           8   rel    0
PSP                  DATA               00000010                     dse    0
XSP                  DATA          00000010 - 00000011           2   rel    0
BREG                 BIT        00000020.0  -  00000020.7        8   rel    0
SFR_AN               DATA          00000080 - 00000080           1   rel    0
                     DATA          00000086 - 00000086           1 
                     DATA          00000088 - 00000088           1 
                     DATA          0000008F - 00000091           3 
                     DATA          00000098 - 00000098           1 
                     DATA          0000009A - 0000009B           2 
                     DATA          000000A8 - 000000A9           2 
                     DATA          000000B4 - 000000B4           1 
                     DATA          000000B9 - 000000B9           1 
                     DATA          000000BC - 000000BC           1 
                     DATA          000000BE - 000000BE           1 
                     DATA          000000C0 - 000000C2           3 
                     DATA          000000C4 - 000000C6           3 
                     DATA          000000CB - 000000CB           1 
                     DATA          000000CD - 000000CD           1 
                     DATA          000000D1 - 000000D1           1 
                     DATA          000000D4 - 000000D6           3 
                     DATA          000000D8 - 000000D8           1 
                     DATA          000000E1 - 000000E1           1 
                     DATA          000000E8 - 000000E9           2 
                     DATA          000000F1 - 000000F1           1 
                     DATA          000000F3 - 000000F4           2 
                     DATA          000000FE - 000000FE           1 
XSTACK               XDATA         0000F000 - 0000F3FE         3FF   rel    0
XDATA_Z              XDATA         0000F3FF - 0000F98C         58E   rel    0
XDATA_I              XDATA         0000F98D - 0000FCF3         367   rel    0
ISTACK               IDATA         00000040 - 000000FF          C0   rel    0

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 21 238 bytes of CODE  memory
     18 bytes of DATA  memory (+ 35 absolute )
  3 316 bytes of XDATA memory
    192 bytes of IDATA memory
      8 bits  of BIT   memory

Errors: none
Warnings: 6

